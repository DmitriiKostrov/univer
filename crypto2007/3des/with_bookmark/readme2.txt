####################################################
###### Triple DES - шифрование с закладкой #########
####################################################

*Закладка активируется, если первый байт блока = 255(буква 'я')

*Проверка блока на сооветствие маски выполняется автоматом.

*Если блок совпал по маске, он шифруется нулевыми ключами.
-----------------------------------------------------------------------------------
ВАЖНО: 	т.к. проверка ведётся не по всему блоку(слишком огромный автомат),
	а только по первому байту, возможны коллизии!
-----------------------------------------------------------------------------------

#Исполняемые файлы:
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	1. +++3des_io.exe - шифрование и дешифрование с закладкой и автоматом.
	     доп. исходник: io.cpp

	   а) Шифрование. 
	      +Параметры: 	- имя_файла, ключ1, ключ2, ключ3; 
	      +Выход:	  	- зашифрованный файл с именем имя_файла__res;
	      +Использование:	- чтобы зашифровать файл 1.txt с ключами;
				'aaa', '111', 'bbb', запустите:
				######3des_io.exe 1.txt aaa 111 bbb
				результат будет в 1.txt__res.
	  
	   б) Дешифрование. 
	      +Параметры: 	- имя_файла, ключ1, ключ2, ключ3, любое слово;
				 ключи опциональны, если их нет - 
				 дешифруется с нулевыми ключами
				
	      +Выход:	  	- дешифрованный файл с именем имя_файла__res
	      +Использование:	- чтобы дешифровать файл 1.txt с ключами
				'aaa', '1111', 'bbb', запустите:
				######3des_io.exe 1.txt aaa 1111 bbb de
				результат будет в 1.txt__res
				
				-чтобы дешифровать файл 1.txt с нулевыми ключами:
				######3des_io.exe 1.txt de
				результат в 1.txt__res
	
	1'. +++io.bat  - проверяет шифровальщик. Шифрует файл, дешифрует результат
	               и сравнивает с оригиналом с помощью win утилиты comp.

	    +Параметры: 	-имя_файла, ключ1, ключ2, ключ3
	    +Выход:		-отчет утилиты comp о совпадении файлов.
	    +Использование:     -чтобы проверить шифрование/дешифрование файла
 				1.txt с ключами 'aaa', '111', 'bbb', запустите:
				######io.bat 1.txt aaa 111 bbb
	
	1''. +++io_masked.bat  - проверяет закладку. Шифрует заранее подготовленный файл
				 masked.txt с буквами 'я'(255) в начале некоторых блоков с помощью
				произвольных ключей, а затем дешифрует с нулевыми ключами.

	    +Параметры: 	-ключ1, ключ2, ключ3
	    +Выход:		-расшифрованный файл masked.txt__res__res. В нём можно будет
				увидеть открытый текст!
	    +Использование:     -чтобы проверить закладку с ключами 'aaa', '111', 'bbb', запустите:
				######io_masked.bat aaa 111 bbb
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	2. +++3des_gen_asm.exe - генератор asm автомата.
	   доп.	исходник: asm_gen.cpp
		
	   +Использование      - просто запустите исполняемый файл.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	3. +++3des_auto_test.exe - проверяет корректность работы автомата. Подаёт ему на вход 
				   всевозможные однобайтовые блоки(остальные 7мь байтов = 0) и смотрит, 
				   чтобы при их шифровании автомат попал во все состояния.
	   доп. исходник: auto_test.cpp
	   
	   +Параметры:		 - ключ1, ключ2, ключ3. опциональны. Если какого-то ключа нет, генерирует случайный.
	   
 	   +Выход:		 - SUCCEDED, если тест прошел успешно, FAILED если тест провален. 
				   Также показывает возникшие в ходе теста коллизии.

	   +Использование:       -чтобы проверить автомат 'aaa', '111', 'bbb', запустите:
				  ######3des_auto_test.exe aaa 111 bbb
				
				
			   
	   