####################################################
###### Triple DES - шифрование без закладки #########
####################################################

#Исполняемые файлы:
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	1. +++3des_io.exe - шифрование и дешифрование файла.
	   доп. исходник: io.cpp

	   а) Шифрование. 
	      +Параметры: 	- имя_файла, ключ1, ключ2, ключ3; 
	      +Выход:	  	- зашифрованный файл с именем имя_файла__res;
	      +Использование:	- чтобы зашифровать файл 1.txt с ключами;
				'aaa', '111', 'bbb', запустите:
				######3des_io.exe 1.txt aaa 111 bbb
				результат будет в 1.txt__res.
	  
	   б) Дешифрование. 
	      +Параметры: 	- имя_файла, ключ1, ключ2, ключ3, любое слово;
	
				
	      +Выход:	  	- дешифрованный файл с именем имя_файла__res
	      +Использование:	- чтобы дешифровать файл 1.txt с ключами
				'aaa', '1111', 'bbb', запустите:
				######3des_io.exe 1.txt aaa 1111 bbb de
				результат будет в 1.txt__res

	
	1'. +++io.bat  - проверяет шифровальщик. Шифрует файл, дешифрует результат
	               и сравнивает с оригиналом с помощью win утилиты comp.

	    +Параметры: 	имя_файла, ключ1, ключ2, ключ3
	    +Выход:		отчет утилиты comp о совпадении файлов.
	    +Использование:     чтобы проверить шифрование/дешифрование файла
 				1.txt с ключами 'aaa', '111', 'bbb', запустите:
				######io.bat 1.txt aaa 111 bbb
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	2. +++3des_gamma.exe - шифровнаие с помощью гаммы.
	   доп. исходник: gamma.cpp

	  Шифрование 
	      +Параметры: 	- имя_файла, ключ1, ключ2, ключ3; 
	      +Выход:	  	- зашифрованный файл с именем имя_файла__res;
	      +Использование:	- чтобы зашифровать файл 1.txt с ключами;
				'aaa', '111', 'bbb', запустите:
				######3des_gamma.exe 1.txt aaa 111 bbb
				результат будет в 1.txt__res.
		
	
	2'. +++gamma.bat 	 - проверяет gamma шифровальщик. Шифрует файл с первым набором ключей, 
				шифрует результат со вторым набором, дешифрует результат с первым
				набором ключей, дешифрует со вторым и сравнивает с оригиналом 
				с помощью win утилиты comp.

	    +Параметры: 	имя_файла, ключ1, ключ2, ключ3, ключ1_2, ключ2_2, ключ3_2
	    +Выход:		отчет утилиты comp о совпадении файлов.
	    +Использование:     чтобы проверить гамма шифрование файла 1.txt 
				с первым набором ключей: 'aaa', 'bbb', 'ccc' и вторым набором
				 '111', '222', '333'запустите:
				######gamma.bat 1.txt aaa bbb ccc 111 222 333
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	3. +++3des_hash.exe - получение хэша.
	   доп. исходник: hash.cpp

	      +Параметры: 	- имя_файла; 
	      +Выход:	  	- хэш в файле с именем имя_файла__res;
	      +Использование:	- чтобы получить хэш из файла 1.txt запустите:
				######3des_hash.exe 1.txt aaa 111 bbb
				результат будет в 1.txt__res.
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	4. +++3des_server.exe - сервер для корректной раздачи карт.
	   доп. исходник: server.cpp

	      +Параметры: 	- адрес для бинда; 
	      +Использование:	- чтобы запустить сервер на localhost запустите:
				######3des_server.exe 127.0.0.1

	4'. +++server.bat -  создает сервер на локалхосте. Просто запустите батник.
	++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	5. +++3des_client.exe - клиент для корректной раздачи карт.
	   доп. исходник: client.cpp

	      +Параметры: 	- адрес для подключения; 
	      +Использование:	- чтобы запустить клиент с коннектом на локалхост запустите:
				######3des_client.exe 127.0.0.1

	5'. +++client.bat -  создает клиент, пытающийся законнектиться на 127.0.0.1. Просто запустите батник.
	+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Логика: *сервер генерирует 52 карты, перемешивает, шифрует гаммой со своими случайнмиы ключами, отправляет клиенту.
		*клиент получает 52 карты, выбирает произвольных 5 карт шифрует со своими случайными ключами, отправляет серверу.
		*сервер получает 5 карт, дешифрует гаммой со своими ключами, отправляет клиенту.
		*клиент получает 5 карт, дешифрует со своими ключами - это его карты. Далее он выбирает ещё какие то 5ть карт, отправляет серверу.
		*сервер получает 5ть карт, дешифрует со своими ключами - это его карты. РАЗДАЧА ВЫПОЛНЕНА!

				
			   
	   