;Изменение прерывания.
;Вектор 8 - необходим для работы системных часов
;Прерывание возникает с периодичностью 18,2 раза в секунду
text segment
 	assume CS:text, DS:data
start:
main proc
	mov AX,data
	mov DS,AX
;прочитаем и сохраним исходное содержимое вектора 8
	mov AX,3508h ;функция 35 получает вектор с номером AL (т.е. у нас 08)
	int 21h
	mov word ptr old_08h,BX ;сохранили младшие байты
	mov word ptr old_08h+2, ES; старшие сохранили

;устанавливаем свой обработчик прерываний new_08h
	mov AX,2508h
	mov DX,offset new_08h
	push DS ;сохраним на время DS
	;т.к. 25 функции необходим адрес(полный двусловный)
	;нового прерывнаиея
	;заносим этот адрес в DS:DX
	push CS ;отправим содержимое CS в DS
	pop DS
	int 21h ;вызвали функцию 25
	pop DS  ;восстановили DS

;сымитируем действия, выполняемые в течение 3 секунд, зациклив программу
stop: 	jmp stop

;вторая ветвь программы, активизируемая через 3 секунды
fin:	mov AH,09h
	mov DX,offset msg
	int 21h
	mov AX,2508h ;восстановим вектор 8
	lds DX,old_08h
	int 21h
	mov AX,4C00h
	int 21h
main endp
	
;Прикладной обработчки прерываний от таймера,
;активизируемый 18,2 раза в секунду
;НА ЗАМЕТКУ 54,6 = 18,2 * 3 сек
new_08h proc
	push AX ;Сохраним 2 используемых в обработчике регистра
	push BP	;В СТЕКЕ ТЕПЕРЬ ЕСТЬ 2 ЭЛЕМЕНТА!!!!
	dec CS:time ;декремент интервала времени
	jnz outint ; пока не ноль выйти из прерывания
;содержимое ячейки time уменьшилось до 0, выпольнить переключение проги
;такое произошло при обрабоке 54 по счёту прерывания
	mov BP,SP         ;BP = текущая вершина стека
	mov AX,offset fin ;смещение точки перехода
	mov [BP+4],AX     ;отправим его в стек на место IP - адрес возврата
	mov AX,seg fin    ;сегмент точки перехода
	mov [BP+6],AX     ;отправим его в стек на место CS
;таким образом настроили CS:IP , т.к. они были в стеке уже. Т.е. с помощью
;смещения на 4 и на 6 мы получили доступ к CS и к IP

outint:mov AL,20h  ;команда End Of Int в контроллер прерываний
	out 20h,AL  ;сброс кода 20h в порт20h
	;если этого не сделать, все прерывания данного и более низких приоритетов
	;остануться заблокированными
	pop BP   ;Восстановим оба
	pop AX   ;сохранённых регистра
	iret 	 ;выход из прерываний

time dw 54; ячейка для отсчёта времени
new_08h endp

text ends

data segment
	old_08h dd 0
	msg db 'Временной интервал истёк!$'		
data ends
    end start